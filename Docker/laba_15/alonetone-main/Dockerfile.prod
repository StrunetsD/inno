FROM ruby:2.7 AS builder

RUN apt-get update -qq && \
    apt-get install -y curl && \
    curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
    apt-get install -y nodejs \
    build-essential \
    libpq-dev \
    imagemagick \
    ffmpeg && \
    npm install -g yarn@1.22.19 && \
    apt-get remove -y curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY Gemfile Gemfile.lock ./
RUN bundle config set without 'development test' && \
    bundle install --jobs 4 --retry 3 --path vendor/bundle

COPY package.json yarn.lock ./
RUN yarn install --production --frozen-lockfile

COPY . .

RUN rm -f lib/tasks/spec.rake

RUN mkdir -p config && \
    echo "production:" > config/database.yml && \
    echo "  adapter: sqlite3" >> config/database.yml && \
    echo "  database: /tmp/db.sqlite3" >> config/database.yml

RUN bundle exec rake assets:precompile RAILS_ENV=production SECRET_KEY_BASE=dummy

FROM ruby:2.7-slim

RUN apt-get update -qq && apt-get install -y \
    libpq5 \
    imagemagick \
    ffmpeg \
    postgresql-client \
    sqlite3 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY --from=builder /app/public/assets /app/public/assets
COPY --from=builder /app/vendor/bundle /app/vendor/bundle
COPY --from=builder /app/node_modules /app/node_modules
COPY --from=builder /app .

RUN rm -f config/database.yml

ENV RAILS_ENV=production
ENV BUNDLE_PATH=/app/vendor/bundle
ENV BUNDLE_WITHOUT=development:test

CMD ["rails", "server", "-b", "0.0.0.0"]